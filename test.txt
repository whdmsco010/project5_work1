1. git으로 관리할 경로까지 이동

2. 초기화
    git init(한 번만)
    -> ls -al(숨겨진 파일 확인)
    -> .git 폴더 삭제(rm -rf .git)

3. 브랜치 이름 변경하기
    git config --global init.defaultBranch main(디폴트 변경)
    git branch -m master main(현재, 이전에 생성된)

4. git 상태 확인
    git status

5. git으로 관리하는 파일 추가
    git add .

6. 커밋
    git commit -m "커밋 메세지"

7. 커밋 이전에 계정정보 등록(global을 빼야 여러 계정 왔다갔다 가능)
    git config --global user.name "User name"
    git config --global user.email "User email"

8. commit 정보 확인(커밋이 몇 번 되었는지)
    git log
    git log --graph
    git log --graph --all
    git log --graph --oneline
    git log --graph --oneline --all

9. 과제
    project_5/test1을 생성
    git으로 관리
    파일 생성은 알아서 --- 최소 커밋 수는 5번 이상

---------------------------------------------------------------------

1. 로컬 컴퓨터와 github 사이트 연결
    git remote
    git remote -v

2. remote 추가
    git remote add 리모트 이름 github 레퍼지토리 주소
    git remote add origin https://github.com/whdmsco010/project5_work1.github

3. remote 삭제
    git remote rm 리모트 이름
    git remote rm origin

4. github 데이터 넣기
    git push -u origin main 이거 한 번 했으면
    그 후엔 git push만 해도 됨


---------------------------------------------------------------------
    clone 하기
    github에 올린 것을 받아올 때
    -> 코드가 없는 상태에서 전체 코드를 받아올 경우

1. 현재 위치에 레퍼지토리 이름의 폴더를 만들고 파일을 가져온다
    git clone <url>
    
2. <디렉토리> 위치에 폴더를 만들지 않고 파일을 가져온다
    git clone <url> .
    git clone <url> <디렉토리명>

---------------------------------------------------------------------
    pull 하기
    github에 올린 것을 받아올 때
    -> 코드가 있는 상태에서 변경된 부분을 받을 경우

---------------------------------------------------------------------
    브랜치 작성

1. 브랜치 목록 확인
    git branch

2. 브랜치 생성
    git branch <브랜치명>

3. 브랜치 이동
    git switch test01
    
4. 브랜치에서 소스 코딩 add, commit 작업 진행
    
---------------------------------------------------------------------
    브랜치 병합

1. 현재 위치에서 다른 것을 들고 옴
    git merge <합칠 브랜치명>(main에서 main으로 코드 합류)
    git add .
    git commit -m "메세지"

    브랜치 삭제

1. 다른 곳에서 삭제할 브랜치를 삭제해야 함
    git branch -d 브랜치명

    브랜치 복구

1. git branch 브랜치명 커밋번호(7자리 정도만 알아도 됨)

---------------------------------------------------------------------
    파일 제외 시키기
    .gitignore
